{"version":3,"file":"index-DuVGOmAB.js","sources":["../../../../components/SparePartInput.vue","../../../../components/CarsSearch.vue","../../../../components/SpareParts.vue","../../../../pages/index.vue"],"sourcesContent":["<template>\n  <div class=\"input-container\">\n    <span class=\"baslik\">Ürünleri plakaya isle: </span>\n    <div class=\"input-wrapper\">\n      <input\n        type=\"text\"\n        v-model=\"inputValue\"\n        @keyup.enter=\"submitPartIds\"\n        placeholder=\"Ürün numarasi ekle (virgülle ayir)\"\n        class=\"styled-input\"\n      />\n      <!-- Clear button to reset the input -->\n      <span v-if=\"inputValue\" class=\"clear-button\" @click=\"clearInput\">X</span>\n    </div>\n    <button @click=\"submitPartIds\" class=\"styled-button\">Ürünleri isle</button>\n  </div>\n</template>\n\n<script setup>\nconst emit = defineEmits(['submitPartIds'])\nconst inputValue = ref('')\n\n// Emit the input value to the parent component\nconst submitPartIds = () => {\n  if (inputValue.value.trim()) {\n    emit('submitPartIds', inputValue.value.split(',').map(id => id.trim()))\n  }\n}\n\n// Clear the input field\nconst clearInput = () => {\n  inputValue.value = ''\n}\n</script>\n\n<style scoped>\n.input-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  margin: 0 auto;\n}\n\n.input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.styled-input {\n  width: 400px;\n  height: 30px;\n  margin: 20px;\n  padding: 10px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.clear-button {\n  position: absolute;\n  right: 30px;\n  top: 35%;\n  cursor: pointer;\n  font-size: 18px;\n  color: #888;\n}\n\n.clear-button:hover {\n  color: #333;\n}\n\n.styled-button {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n}\n\n.styled-button:hover {\n  background-color: #45a049;\n}\n\n.baslik {\n  font-family: 'Arial', sans-serif;\n  color: #333;\n  text-transform: capitalize;\n  font-size: 1.5rem;\n  font-weight: bold;\n  line-height: 1.2;\n}\n</style>\n","<template>\n    <div>\n      <input \n        v-model=\"searchQuery\" \n        placeholder=\"Arac plakasi ara\"\n        @keyup.enter=\"submitSearch\"\n        class=\"search-input\"\n      />\n  \n      <table>\n        <thead>\n          <tr>\n            <th>Kayitli arac listesi. ({{cars.length}} kayitli arac blunmaktadir): </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr \n            v-for=\"(car, index) in paginatedCars\" \n            :key=\"index\" \n            @click=\"selectCar(car)\"\n            :class=\"{ 'selected-car': selectedCar && selectedCar.arac_id === car.arac_id }\"\n          >\n            <td>{{ car.arac_id }}</td>\n          </tr>\n        </tbody>\n      </table>\n  \n      <!-- Load More Button -->\n      <div class=\"buttons\">\n        <div>\n          <button \n            v-if=\"hasMoreCars\" \n            @click=\"loadMore\" \n            class=\"load-more-btn\"\n          >\n            Daha fazla arac göster\n          </button>\n\n          <button \n            v-if=\"hasLessCars\" \n            @click=\"loadLess\" \n            class=\"load-less-btn\"\n          >\n            Daha az arac göster\n        </button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n  const emit = defineEmits(['selectCar'])\n  \n  const props = defineProps({\n    cars: {\n      type: Array,\n      required: true\n    }\n  })\n  \n  // Search input value\n  const searchQuery = ref('')\n  \n  // Store the selected car\n  const selectedCar = ref(null)\n  \n  // Number of cars to display initially\n  const itemsPerPage = ref(10)\n  const currentPage = ref(1)\n  \n  // Emit and set the selected car\n  const selectCar = (car) => {\n    selectedCar.value = car\n    emit('selectCar', car.arac_id)\n  }\n  \n  // Computed property to filter cars based on searchQuery\n  const filteredCars = computed(() => {\n    return props.cars.filter(car =>\n      car.arac_id.toLowerCase().includes(searchQuery.value.toLowerCase())\n    )\n  })\n  \n  // Paginated cars\n  const paginatedCars = computed(() => {\n    const start = 0;\n    const end = currentPage.value * itemsPerPage.value\n    return filteredCars.value.slice(start, end)\n  })\n  \n  // Check if there are more cars to load\n  const hasMoreCars = computed(() => {\n    return currentPage.value * itemsPerPage.value < filteredCars.value.length\n  })\n\n  const hasLessCars = computed(() => {\n    return currentPage.value !== 1\n  })\n  \n  // Function to load more cars\n  const loadMore = () => {\n    currentPage.value++\n  }\n\n  const loadLess = () => {\n    currentPage.value--\n  }\n  \n  // Function to trigger search on enter key\n  const submitSearch = () => {\n    if (!searchQuery.value.trim()) {\n      searchQuery.value = ''\n    }\n    currentPage.value = 1 // Reset to the first page when searching\n  }\n</script>\n  \n<style scoped>\n  .search-input {\n    width: 100%;\n    padding: 12px 20px;\n    margin: 10px 0;\n    box-sizing: border-box;\n    border: 2px solid #ccc;\n    border-radius: 4px;\n    background-color: #f8f8f8;\n    font-size: 16px;\n    transition: border-color 0.3s ease, box-shadow 0.3s ease;\n  }\n  \n  .search-input:focus {\n    border-color: #007BFF;\n    box-shadow: 0 0 8px rgba(0, 123, 255, 0.5);\n    outline: none;\n  }\n  \n  /* Highlight the selected car's row */\n  .selected-car {\n    background-color: #007BFF;\n    color: white;\n  }\n  \n  tbody tr {\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  \n  tbody tr:hover {\n    background-color: rgb(95, 130, 19);\n    color: white;\n  }\n  \n  .load-more-btn {\n    margin: 15px auto;\n    padding: 10px 20px;\n    margin-right: 20px;\n    background-color: #007BFF;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n  }\n  \n  .load-more-btn:hover {\n    background-color: #0056b3;\n  }\n\n  .load-less-btn {\n    margin: 15px auto;\n    padding: 10px 20px;\n    margin-right: 20px;\n    background-color: #20b1c4;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n  }\n  \n  .load-less-btn:hover {\n    background-color: #0056b3;\n  }\n\n  .buttons {\n    width: auto;\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    justify-content: center;\n  }\n  </style>\n  ","<template>\n    <div>\n      <input \n        v-model=\"searchQuery\" \n        placeholder=\"Parça ara - numara veya isim ara\"\n        @keyup.enter=\"submitSearch\"\n        class=\"search-input\"\n      />\n  \n      <table>\n        <thead>\n          <tr>\n            <th>Ürün numarasi</th>\n            <th>Ürün adi</th>\n            <th>Stok adedi</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr \n            v-for=\"(part, index) in paginatedParts\" \n            :key=\"index\" \n          >\n            <td>{{ part.ürün_numarasi }}</td>\n            <td>{{ part.ürün_ismi }}</td>\n            <td>{{ part.ürün_adedi }}</td>\n          </tr>\n        </tbody>\n      </table>\n  \n      <!-- Load More Button -->\n      <div class=\"buttons\">\n        <div>\n          <button \n            v-if=\"hasMoreParts\" \n            @click=\"loadMore\" \n            class=\"load-more-btn\"\n          >\n            Daha fazla parça göster\n          </button>\n  \n          <button \n            v-if=\"hasLessParts\" \n            @click=\"loadLess\" \n            class=\"load-less-btn\"\n          >\n            Daha az parça göster\n          </button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n  const emit = defineEmits(['selectPart'])\n  \n  const props = defineProps({\n    parts: {\n      type: Array,\n      required: true\n    }\n  })\n  \n  // Search input value\n  const searchQuery = ref('')\n  \n  // Number of parts to display initially\n  const itemsPerPage = ref(10)\n  const currentPage = ref(1)\n  \n  // Emit and set the selected part\n  \n  // Computed property to filter parts based on searchQuery\n  const filteredParts = computed(() => {\n    return props.parts.filter(part =>\n      part.ürün_numarasi.toString().includes(searchQuery.value.toLowerCase()) ||\n      part.ürün_ismi.toLowerCase().includes(searchQuery.value.toLowerCase())\n    )\n  })\n  \n  // Paginated parts\n  const paginatedParts = computed(() => {\n    const start = 0\n    const end = currentPage.value * itemsPerPage.value\n    return filteredParts.value.slice(start, end)\n  })\n  \n  // Check if there are more parts to load\n  const hasMoreParts = computed(() => {\n    return currentPage.value * itemsPerPage.value < filteredParts.value.length\n  })\n  \n  const hasLessParts = computed(() => {\n    return currentPage.value !== 1\n  })\n  \n  // Function to load more parts\n  const loadMore = () => {\n    currentPage.value++\n  }\n  \n  const loadLess = () => {\n    currentPage.value--\n  }\n  \n  // Function to trigger search on enter key\n  const submitSearch = () => {\n    if (!searchQuery.value.trim()) {\n      searchQuery.value = ''\n    }\n    currentPage.value = 1 // Reset to the first page when searching\n  }\n  </script>\n  \n  <style scoped>\n  .search-input {\n    width: 100%;\n    padding: 12px 20px;\n    margin: 10px 0;\n    box-sizing: border-box;\n    border: 2px solid #ccc;\n    border-radius: 4px;\n    background-color: #f8f8f8;\n    font-size: 16px;\n    transition: border-color 0.3s ease, box-shadow 0.3s ease;\n  }\n  \n  .search-input:focus {\n    border-color: #007BFF;\n    box-shadow: 0 0 8px rgba(0, 123, 255, 0.5);\n    outline: none;\n  }\n  \n  /* Highlight the selected part's row */\n  .selected-part {\n    background-color: #007BFF;\n    color: white;\n  }\n  \n  tbody tr {\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  \n  tbody tr:hover {\n    background-color: rgb(95, 130, 19);\n    color: white;\n  }\n  \n  .load-more-btn {\n    margin: 15px auto;\n    padding: 10px 20px;\n    margin-right: 20px;\n    background-color: #007BFF;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n  }\n  \n  .load-more-btn:hover {\n    background-color: #0056b3;\n  }\n  \n  .load-less-btn {\n    margin: 15px auto;\n    padding: 10px 20px;\n    margin-right: 20px;\n    background-color: #20b1c4;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n  }\n  \n  .load-less-btn:hover {\n    background-color: #0056b3;\n  }\n  \n  .buttons {\n    width: auto;\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    justify-content: center;\n  }\n  </style>\n  ","<template>\n    <div>\n      <!-- Arac Tablosu -->\n      <h2>Araclar</h2>\n\n      <h3>Bir arac seciniz (Plaka): \n        <span \n          :class=\"{'car-selected': selectedCar, 'car-not-selected': !selectedCar}\"\n        >\n          {{ selectedCar ? selectedCar : 'Arac Secilmedi' }}\n        </span>\n      </h3>\n  \n      <SparePartInput @submitPartIds=\"decreaseStock\" />\n\n      <ClientOnly>\n        <ErrorModal v-if=\"showError\" :showModal=\"showError\" :errorMessage=\"errorMessage\" @close=\"closeErrorModal\" />\n      </ClientOnly>\n\n      <!-- License Plates Table -->\n      <h3>Arac Plakasi sec</h3>\n      <CarsSearch :cars=\"cars\" @selectCar=\"selectCar\" />\n      <h3>Ürün listesi: </h3>\n      <SpareParts :parts=\"allSpareParts\" />\n    </div>\n  </template>\n  \n  <script setup>\n  import SparePartInput from '~/components/SparePartInput.vue';\n  import ErrorModal from '~/components/ErrorModal.vue';\n  import CarsSearch from '~/components/CarsSearch.vue';\n  import SpareParts from '~/components/SpareParts.vue';\n\n  // Refs to hold cars and spare parts data\n  const cars = ref([]);\n  const allSpareParts = ref([]);\n  const selectedCar = ref(null)\n\n  // Error handling\n  const showError = ref(false)\n  const errorMessage = ref('')\n\n  // Function to select a car\n  const selectCar = (car) => {\n    selectedCar.value = car\n  }\n  \n  // Function to fetch cars and spare parts data\n  onMounted(async () => {\n    try {\n      const carsResponse = await fetch('/api/cars');\n      const partsResponse = await fetch('/api/parts');\n\n      if (carsResponse.ok) {\n        cars.value = await carsResponse.json();\n      }\n\n      if (partsResponse.ok) {\n        allSpareParts.value = await partsResponse.json();\n        allSpareParts.value.sort((a, b) => {\n          return a.ürün_numarasi - b.ürün_numarasi;\n        });\n      }\n    } catch (error) {\n      console.error('Verlier yüklenemedi.:', error);\n      showError.value = true\n      errorMessage.value = 'Verlier yüklenemedi.'\n    }\n  });\n  \n  // Function to decrease stock of a part\n  const decreaseStock = async (partsIds) => {\n    console.log(\"partsId: \", partsIds)\n    // Check if no license plate is selected\n    if (!selectedCar.value) {\n      showError.value = true\n      errorMessage.value = 'Arac (Plaka) secilme. Lütfe bir arac secin'\n      return\n    }\n\n    // Validate if part IDs are provided\n    if (!partsIds.length || partsIds.some(id => !id)) {\n      showError.value = true\n      errorMessage.value = 'Ürün numarasi bulunamadi. Gecerli ürün numarasi ekleyin.'\n      return\n    }\n\n    console.log(\"partIds: \", partsIds);\n\n    for (let i = 0; i < partsIds.length; i++) {\n      const partId = partsIds[i];\n      const part = allSpareParts.value.find(p => p.ürün_numarasi === partId);\n\n      if (part && part.adet > 0) {\n        part.adet -= 1;\n\n        if (part.adet < 0) {\n          showError.value = true;\n          errorMessage.value = `${partId} yeterli stogu bulunmamaktadir.`;\n          break; // Break out of the loop\n        }\n      } else {\n        showError.value = true;\n        errorMessage.value = `${partId} numarasinda bir ürün bulunamadi.`;\n        break; // Break out of the loop\n      }\n    }\n\n    if (showError.value) {\n      return;\n    }\n\n    // Save the updated parts data back to the file\n    try {\n      await $fetch('/api/parts', {\n        method: 'POST',\n        body: allSpareParts.value,\n      });\n    } catch (error) {\n      showErrorModal('Ürünler sisteme eklenemedi.');\n    }\n  };\n\n  const closeErrorModal = () => {\n    showError.value = false\n  }\n  </script>\n  <style scoped>\n  .menu {\n    position: absolute;\n    top: 0;\n    right: 200px;\n    display: flex;\n    gap: 20px;\n    padding: 10px;\n  }\n  \n  .menu a {\n    color: green;\n    font-weight: bold;\n    text-decoration: none;\n  }\n  \n  .menu a:hover {\n    text-decoration: underline;\n  }\n\n  .car-selected {\n    color: green;\n  }\n\n  .car-not-selected {\n    color: red;\n  }\n  </style>\n  "],"names":[],"mappings":"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"}